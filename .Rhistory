title = element_text(size = 16, face = "bold.italic"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(color = "black", size = 1))
?stat_compare_means
ggplot(dp.subset.meta.melt, aes(x = Time.Point, y = value, color = variable, fill = variable)) +
geom_boxplot() +
scale_fill_viridis_d(name = "Dorsal-Ventral", option = "A", begin = 0.15, end = 0.85) +
scale_color_viridis_d(name = "Dorsal-Ventral", option = "A", begin = 0.7, end = 0.05) +
stat_compare_means() +
ggtitle("Dorsal-Ventral Enrichment") +
scale_x_discrete(breaks = c("1", "2", "3"),
labels = c("Day -1", "Day 4", "Day 11")) +
theme(legend.position="right",
legend.text = element_text(size = 14, face = "bold"),
axis.text.x = element_text(size = 14, face = "bold.italic"),
axis.text.y = element_text(size = 14, face = "bold.italic"),
axis.title.y = element_blank(),
axis.title.x = element_text(size = 14, face = "bold.italic"),
title = element_text(size = 16, face = "bold.italic"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(color = "black", size = 1))
View(dp.subset.meta.melt)
ggplot(dp.subset.meta.melt, aes(x = Time.Point, y = value, color = variable, fill = variable)) +
geom_boxplot() +
scale_fill_viridis_d(name = "Dorsal-Ventral", option = "A", begin = 0.15, end = 0.85) +
scale_color_viridis_d(name = "Dorsal-Ventral", option = "A", begin = 0.7, end = 0.05) +
stat_compare_means(comparisons = list(c("1", "3"))) +
ggtitle("Dorsal-Ventral Enrichment") +
scale_x_discrete(breaks = c("1", "2", "3"),
labels = c("Day -1", "Day 4", "Day 11")) +
theme(legend.position="right",
legend.text = element_text(size = 14, face = "bold"),
axis.text.x = element_text(size = 14, face = "bold.italic"),
axis.text.y = element_text(size = 14, face = "bold.italic"),
axis.title.y = element_blank(),
axis.title.x = element_text(size = 14, face = "bold.italic"),
title = element_text(size = 16, face = "bold.italic"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(color = "black", size = 1))
ggplot(dp.subset.meta.melt, aes(x = Time.Point, y = value, color = variable, fill = variable)) +
geom_boxplot() +
scale_fill_viridis_d(name = "Dorsal-Ventral", option = "A", begin = 0.15, end = 0.85) +
scale_color_viridis_d(name = "Dorsal-Ventral", option = "A", begin = 0.7, end = 0.05) +
stat_compare_means(comparisons = list(c("1", "3")), aes(label = "..p.signif..")) +
ggtitle("Dorsal-Ventral Enrichment") +
scale_x_discrete(breaks = c("1", "2", "3"),
labels = c("Day -1", "Day 4", "Day 11")) +
theme(legend.position="right",
legend.text = element_text(size = 14, face = "bold"),
axis.text.x = element_text(size = 14, face = "bold.italic"),
axis.text.y = element_text(size = 14, face = "bold.italic"),
axis.title.y = element_blank(),
axis.title.x = element_text(size = 14, face = "bold.italic"),
title = element_text(size = 16, face = "bold.italic"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(color = "black", size = 1))
pdf("~/Desktop/Morris Lab/Paper/Manuscript/scClassifier/Main Figures/Figure 3/V2/Direct_dorsal_ventral_box.pdf", width = 8, height = 6, paper = "special")
ggplot(dp.subset.meta.melt, aes(x = Time.Point, y = value, color = variable, fill = variable)) +
geom_boxplot() +
scale_fill_viridis_d(name = "Dorsal-Ventral", option = "A", begin = 0.15, end = 0.85) +
scale_color_viridis_d(name = "Dorsal-Ventral", option = "A", begin = 0.7, end = 0.05) +
stat_compare_means(comparisons = list(c("1", "3")), aes(label = "..p.signif..")) +
ggtitle("Dorsal-Ventral Enrichment") +
scale_x_discrete(breaks = c("1", "2", "3"),
labels = c("Day -1", "Day 4", "Day 11")) +
theme(legend.position="right",
legend.text = element_text(size = 14, face = "bold"),
axis.text.x = element_text(size = 14, face = "bold.italic"),
axis.text.y = element_text(size = 14, face = "bold.italic"),
axis.title.y = element_blank(),
axis.title.x = element_text(size = 14, face = "bold.italic"),
title = element_text(size = 16, face = "bold.italic"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(color = "black", size = 1))
dev.off()
ref.list <- readRDS("~/Desktop/Morris Lab/Paper/Manuscript/scClassifier/Mouse Gastrulation/reference_generated_wo_less_than_30_or_mixed_all.Rds")
ref.sc <- ref.list[[1]]
ref.meta <- ref.list[[2]]
ref.df <- ref.list[[3]]
View(ref.df)
reference.data <- readRDS("~/Desktop/Morris Lab/Paper/Manuscript/scClassifier/Mouse Gastrulation/mca_adult_Reference.Rds")
ref.sc <- reference.data[[1]]
ref.meta <- reference.data[[2]]
ref.df <- reference.data[[3]]
View(ref.df)
View(ref.meta)
unique(unlist(lapply(strsplit(ref.meta$cell.bc, "_"), function(x) x[1])))
library(colorspace)
library(png)
library(colorspace)
colin.ori <- readPNG("~/Desktop/Morris Lab/Random/colin icon.png")
dim(colin.ori)
y <- rgb(colin.ori[,,1], colin.ori[,,2], colin.ori[,,3], alpha = colin.ori[,,4])
y <- rgb(colin.ori[,,1], colin.ori[,,2], colin.ori[,,3])
unique(y)
yg <- desaturate(y)
yn <- col2rgb(yg)[1, ]/255
dim(y) <- dim(yg) <- dim(yn) <- dim(colin.ori)[1:2]
pixmatplot <- function (x, ...) {
d <- dim(x)
xcoord <- t(expand.grid(1:d[1], 1:d[2]))
xcoord <- t(xcoord/d)
par(mar = rep(1, 4))
plot(0, 0, type = "n", xlab = "", ylab = "", axes = FALSE,
xlim = c(0, 1), ylim = c(0, 1), ...)
rect(xcoord[, 2L] - 1/d[2L], 1 - (xcoord[, 1L] - 1/d[1L]),
xcoord[, 2L], 1 - xcoord[, 1L], col = x, border = "transparent")
}
pixmatplot(colin.ori)
pixmatplot(y.g)
pixmatplot(yg)
pixmatplot(yn)
View(yn)
pixmatplot(y)
non.white.coord <- data.frame()
for (i in 1:ncol(y)) {
for (j in 1:nrow(y)) {
if (y[i,j] != "#FFFFFF") {
curr.df <- data.frame(x = i, y = j, color = y[i,j], stringsAsFactors = F)
if (nrow(non.white.coord) <= 0) {
non.white.coord <- curr.df
} else {
non.white.coord <- rbind(non.white.coord, curr.df)
}
}
}
}
View(non.white.coord)
library(ggplot2)
ggplot(non.white.coord, aes(x = x, y = y, color = color)) +
geom_point()
ggplot(non.white.coord, aes(x = y, y = x, color = color)) +
geom_point()
ggplot(non.white.coord, aes(x = -y, y = -x, color = color)) +
geom_point()
ggplot(non.white.coord, aes(x = -y, y = -x, color = color)) +
geom_point() +
scale_color_viridis_d()
ggplot(non.white.coord, aes(x = -y, y = -x, color = color)) +
geom_point(size = 0.5) +
scale_color_viridis_d() +
ggplot(non.white.coord, aes(x = -y, y = -x, color = color)) +
geom_point(size = 0.5) +
scale_color_viridis_d() +
theme_bw()
ggplot(non.white.coord, aes(x = -y, y = -x, color = color)) +
geom_point(size = 0.5) +
scale_color_viridis_d() +
theme_bw()
ggplot(non.white.coord, aes(x = -y, y = -x, color = color)) +
geom_point(size = 0.5) +
scale_color_viridis_d() +
theme(legend.position="none",
axis.text.x = element_text(size = 14),
axis.title.x = element_blank(),
axis.title.y = element_text(size = 14, face = "bold.italic"),
title = element_text(face = "bold.italic", size = 16),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
ggplot(non.white.coord, aes(x = -y, y = -x, color = color)) +
geom_point(size = 0.5) +
scale_color_viridis_d() +
theme(legend.position="none",
axis.text.x = element_text(size = 14),
axis.title = element_blank(),
title = element_text(face = "bold.italic", size = 16),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
ggplot(non.white.coord, aes(x = -y, y = -x, color = color)) +
geom_point(size = 0.5) +
scale_color_viridis_d() +
theme(legend.position="none",
axis.text = element_blank,
axis.title = element_blank(),
title = element_text(face = "bold.italic", size = 16),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
ggplot(non.white.coord, aes(x = -y, y = -x, color = color)) +
geom_point(size = 0.5) +
scale_color_viridis_d() +
theme(legend.position="none",
axis.text = element_blank(),
axis.title = element_blank(),
title = element_text(face = "bold.italic", size = 16),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
ggplot(non.white.coord, aes(x = -y, y = -x, color = y)) +
geom_point(size = 0.5) +
scale_color_viridis_c() +
theme(legend.position="none",
axis.text = element_blank(),
axis.title = element_blank(),
title = element_text(face = "bold.italic", size = 16),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
ggplot(non.white.coord, aes(x = -y, y = -x, color = y)) +
geom_density_2d() +
scale_color_viridis_c() +
theme(legend.position="none",
axis.text = element_blank(),
axis.title = element_blank(),
title = element_text(face = "bold.italic", size = 16),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
ggplot(non.white.coord, aes(x = -y, y = -x, color = y)) +
stat_density_2d(aes(fill = stat(density)), geom = "raster", contour = F) +
scale_color_viridis_c() +
theme(legend.position="none",
axis.text = element_blank(),
axis.title = element_blank(),
title = element_text(face = "bold.italic", size = 16),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
ggplot(non.white.coord, aes(x = -y, y = -x, color = y)) +
stat_density_2d(aes(fill = stat(density)), geom = "raster", contour = F) +
scale_fill_viridis(option = "A", begin = 0, end = 1) +
theme(legend.position="none",
axis.text = element_blank(),
axis.title = element_blank(),
title = element_text(face = "bold.italic", size = 16),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
library(viridis)
ggplot(non.white.coord, aes(x = -y, y = -x, color = y)) +
stat_density_2d(aes(fill = stat(density)), geom = "raster", contour = F) +
scale_fill_viridis(option = "A", begin = 0, end = 1) +
theme(legend.position="none",
axis.text = element_blank(),
axis.title = element_blank(),
title = element_text(face = "bold.italic", size = 16),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
ggplot(non.white.coord, aes(x = -y, y = -x)) +
stat_density_2d(aes(fill = stat(density)), geom = "raster", contour = F) +
scale_fill_viridis(option = "A", begin = 0, end = 1) +
theme(legend.position="none",
axis.text = element_blank(),
axis.title = element_blank(),
title = element_text(face = "bold.italic", size = 16),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
View(non.white.coord)
unique(non.white.coord$color)
ggplot(non.white.coord, aes(x = -y, y = -x, color = as.factor(y))) +
geom_point(size = 0.1) +
scale_fill_viridis_d(option = "A", begin = 0, end = 1) +
theme(legend.position="none",
axis.text = element_blank(),
axis.title = element_blank(),
title = element_text(face = "bold.italic", size = 16),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
install.packages("alphahull")
library(alphahull)
p <- ahull(non.white.coord$x, non.white.coord$y, alpha = 2.5)
non.white.coord.outline <- data.frame()
for (i in 1:ncol(y)) {
y.non.white <- which(y != "#FFFFFF")
curr.df.1 <- data.frame(x = max(y.non.white), y = i, stringsAsFactors = F)
curr.df.2 <- data.frame(x = min(y.non.white), y = i, stringsAsFactors = F)
if (nrow(non.white.coord.outline) <= 0) {
non.white.coord.outline <- curr.df.1
} else {
non.white.coord.outline <- rbind(non.white.coord, curr.df.1)
}
non.white.coord.outline <- rbind(non.white.coord, curr.df.2)
}
y.non.white <- which(y != "#FFFFFF")
curr.df.1 <- data.frame(x = max(y.non.white), y = i, stringsAsFactors = F)
curr.df.2 <- data.frame(x = min(y.non.white), y = i, stringsAsFactors = F)
non.white.coord.outline <- curr.df.1
non.white.coord.outline <- rbind(non.white.coord, curr.df.2)
View(curr.df.2)
non.white.coord.outline <- data.frame()
for (i in 1:ncol(y)) {
y.non.white <- which(y != "#FFFFFF")
curr.df.1 <- data.frame(x = max(y.non.white), y = i, stringsAsFactors = F)
curr.df.2 <- data.frame(x = min(y.non.white), y = i, stringsAsFactors = F)
if (nrow(non.white.coord.outline) <= 0) {
non.white.coord.outline <- curr.df.1
} else {
non.white.coord.outline <- rbind(non.white.coord.outline, curr.df.1)
}
non.white.coord.outline <- rbind(non.white.coord.outline, curr.df.2)
}
ggplot(non.white.coord.outline, aes(x = x, y = y)) +
geom_smooth()+
theme(legend.position="none",
axis.text = element_blank(),
axis.title = element_blank(),
title = element_text(face = "bold.italic", size = 16),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
ggplot(non.white.coord.outline, aes(x = x, y = y)) +
geom_line()+
theme(legend.position="none",
axis.text = element_blank(),
axis.title = element_blank(),
title = element_text(face = "bold.italic", size = 16),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
View(non.white.coord.outline)
ggplot(non.white.coord.outline, aes(x = x, y = y)) +
geom_point()+
theme(legend.position="none",
axis.text = element_blank(),
axis.title = element_blank(),
title = element_text(face = "bold.italic", size = 16),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
View(non.white.coord.outline)
View(yn)
View(y)
y.non.white <- which(y != "#FFFFFF")
non.white.coord.outline <- data.frame()
for (i in 1:ncol(y)) {
y.non.white <- which(y[,i] != "#FFFFFF")
curr.df.1 <- data.frame(x = max(y.non.white), y = i, stringsAsFactors = F)
curr.df.2 <- data.frame(x = min(y.non.white), y = i, stringsAsFactors = F)
if (nrow(non.white.coord.outline) <= 0) {
non.white.coord.outline <- curr.df.1
} else {
non.white.coord.outline <- rbind(non.white.coord.outline, curr.df.1)
}
non.white.coord.outline <- rbind(non.white.coord.outline, curr.df.2)
}
y[,i]
non.white.coord.outline <- data.frame()
for (i in 1:ncol(y)) {
y.non.white <- which(y[,i] != "#FFFFFF")
if (length(y.non.white) > 0) {
curr.df.1 <- data.frame(x = max(y.non.white), y = i, stringsAsFactors = F)
curr.df.2 <- data.frame(x = min(y.non.white), y = i, stringsAsFactors = F)
if (nrow(non.white.coord.outline) <= 0) {
non.white.coord.outline <- curr.df.1
} else {
non.white.coord.outline <- rbind(non.white.coord.outline, curr.df.1)
}
non.white.coord.outline <- rbind(non.white.coord.outline, curr.df.2)
}
}
ggplot(non.white.coord.outline, aes(x = x, y = y)) +
geom_point()+
theme(legend.position="none",
axis.text = element_blank(),
axis.title = element_blank(),
title = element_text(face = "bold.italic", size = 16),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
ggplot(non.white.coord.outline, aes(x = x, y = y)) +
geom_line()+
theme(legend.position="none",
axis.text = element_blank(),
axis.title = element_blank(),
title = element_text(face = "bold.italic", size = 16),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
ggplot(non.white.coord.outline, aes(x = x, y = y)) +
geom_point()+
theme(legend.position="none",
axis.text = element_blank(),
axis.title = element_blank(),
title = element_text(face = "bold.italic", size = 16),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
ggplot(non.white.coord.outline, aes(x = y, y = x)) +
geom_point()+
theme(legend.position="none",
axis.text = element_blank(),
axis.title = element_blank(),
title = element_text(face = "bold.italic", size = 16),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
ggplot(non.white.coord.outline, aes(x = -y, y = -x)) +
geom_point()+
theme(legend.position="none",
axis.text = element_blank(),
axis.title = element_blank(),
title = element_text(face = "bold.italic", size = 16),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
ggplot(non.white.coord.outline, aes(x = -y, y = -x)) +
geom_point()+
theme(legend.position="none",
axis.text = element_blank(),
axis.title = element_blank(),
title = element_text(face = "bold.italic", size = 16),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_blank())
ggplot(non.white.coord.outline, aes(x = -y, y = -x)) +
geom_point()+
theme(legend.position="none",
axis.text = element_blank(),
axis.title = element_blank(),
title = element_text(face = "bold.italic", size = 16),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_blank())
non.white.coord.outline <- data.frame()
for (i in 1:ncol(y)) {
y.non.white <- which(y[,i] != "#FFFFFF")
sample.size <- round(y.non.white/3)
if (length(y.non.white) > 0) {
curr.df.1 <- data.frame(x = c(max(y.non.white), sample(seq(min(y.non.white), max(y.non.white)), sample.size), min(y.non.white)), y = i, stringsAsFactors = F)
if (nrow(non.white.coord.outline) <= 0) {
non.white.coord.outline <- curr.df.1
} else {
non.white.coord.outline <- rbind(non.white.coord.outline, curr.df.1)
}  }
}
non.white.coord.outline <- data.frame()
for (i in 1:ncol(y)) {
y.non.white <- which(y[,i] != "#FFFFFF")
sample.size <- round(length(y.non.white)/3)
if (length(y.non.white) > 0) {
curr.df.1 <- data.frame(x = c(max(y.non.white), sample(seq(min(y.non.white), max(y.non.white)), sample.size), min(y.non.white)), y = i, stringsAsFactors = F)
if (nrow(non.white.coord.outline) <= 0) {
non.white.coord.outline <- curr.df.1
} else {
non.white.coord.outline <- rbind(non.white.coord.outline, curr.df.1)
}  }
}
ggplot(non.white.coord.outline, aes(x = -y, y = -x)) +
geom_point()+
theme(legend.position="none",
axis.text = element_blank(),
axis.title = element_blank(),
title = element_text(face = "bold.italic", size = 16),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_blank())
non.white.coord.outline <- data.frame()
for (i in 1:ncol(y)) {
y.non.white <- which(y[,i] != "#FFFFFF")
sample.size <- round(length(y.non.white)/10)
if (length(y.non.white) > 0) {
curr.df.1 <- data.frame(x = c(max(y.non.white), sample(seq(min(y.non.white), max(y.non.white)), sample.size), min(y.non.white)), y = i, stringsAsFactors = F)
if (nrow(non.white.coord.outline) <= 0) {
non.white.coord.outline <- curr.df.1
} else {
non.white.coord.outline <- rbind(non.white.coord.outline, curr.df.1)
}  }
}
ggplot(non.white.coord.outline, aes(x = -y, y = -x)) +
geom_point()+
theme(legend.position="none",
axis.text = element_blank(),
axis.title = element_blank(),
title = element_text(face = "bold.italic", size = 16),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_blank())
library(devtools)
library(roxygen2)
setwd("~/Desktop/Morris Lab/Paper/Manuscript/scClassifier/Capybara/")
document()
